{"version":3,"sources":["Components/Banks.js","Components/DrumPad.js","Components/PadBank.js","App.js","index.js"],"names":["BankOne","keyCode","keyTrigger","id","url","BankTwo","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","DrumPad","props","handleKeypress","event","playSound","activatePad","power","state","padStyle","setState","sound","document","getElementById","currentTime","play","setTimeout","updateDisplay","clipId","replace","addEventListener","this","removeEventListener","className","onClick","style","src","clip","Component","PadBank","padBank","currentPadBank","map","drumObj","i","padBankArr","key","App","powerControl","display","String","fromCharCode","selectBank","currentPadBankId","displayClipName","name","adjustVolume","sliderVolume","target","value","Math","round","clearDisplay","powerSwitch","float","bankSwitch","slice","call","getElementsByClassName","forEach","volume","clipVolume","max","min","onChange","step","type","ReactDOM","render"],"mappings":"kOACMA,EAAU,CACZ,CACIC,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,8DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,4DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,0DAET,CACIH,QAAS,GACTC,WAAY,IAIZC,GAAI,cACJC,IAAK,8DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,8DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,2DAIPC,EAAU,CACZ,CACIJ,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,SACJC,IAAK,mEAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,0DAET,CACIH,QAAS,GACTC,WAAY,IAKZC,GAAI,cACJC,IAAK,iEAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,aACJC,IAAK,gEAET,CACIH,QAAS,GACTC,WAAY,IACZC,GAAI,QACJC,IAAK,4DCjHPE,EAAc,CAChBC,gBAAiB,eACjBC,UAAW,qBACXC,OAAQ,GACRC,UAAW,IAGTC,EAAgB,CAClBJ,gBAAiB,OACjBG,UAAW,GACXF,UAAW,qBA+FAI,E,YA5FX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAgBVC,eAAiB,SAACC,GACVA,EAAMd,UAAY,EAAKY,MAAMZ,SAC7B,EAAKe,aAnBM,EA2BnBC,YAAc,WAEN,EAAKJ,MAAMK,MAEiC,iBAAxC,EAAKC,MAAMC,SAASb,gBAEpB,EAAKc,SAAS,CACVD,SAAUT,IAId,EAAKU,SAAS,CACVD,SAAUd,IAGuB,KAAlC,EAAKa,MAAMC,SAASV,UAC3B,EAAKW,SAAS,CAEVD,SAAUT,IAGd,EAAKU,SAAS,CAEVD,SAAU,CACNX,OAAQ,GACRC,UAAW,GACXH,gBAAiB,OACjBC,UAAW,iBAtDR,EA6DnBQ,UAAY,WACR,IAAMM,EAAQC,SAASC,eAAe,EAAKX,MAAMX,YACjDoB,EAAMG,YAAc,EACpBH,EAAMI,OACN,EAAKT,cACLU,WAAW,kBAAM,EAAKV,eAAe,KACrC,EAAKJ,MAAMe,cAAc,EAAKf,MAAMgB,OAAOC,QAAQ,KAAM,OAjEzD,EAAKX,MAAQ,CACTC,SAAUT,GAHC,E,iFASfY,SAASQ,iBAAiB,UAAWC,KAAKlB,kB,6CAI1CS,SAASU,oBAAoB,UAAWD,KAAKlB,kB,+BA0D7C,OACI,yBACIoB,UAAU,WACV/B,GAAI6B,KAAKnB,MAAMgB,OACfM,QAASH,KAAKhB,UACdoB,MAAOJ,KAAKb,MAAMC,UAGlB,2BACIc,UAAU,OACV/B,GAAI6B,KAAKnB,MAAMX,WACfmC,IAAKL,KAAKnB,MAAMyB,OAGnBN,KAAKnB,MAAMX,gB,GAtFNqC,aCiCPC,E,iLAzCH,IACJC,EADG,OAmCP,OA9BEA,EAHET,KAAKnB,MAAMK,MAGHc,KAAKnB,MAAM6B,eAAeC,IAAI,SAACC,EAASC,EAAGC,GACnD,OACE,kBAAC,EAAD,CACER,KAAMQ,EAAWD,GAAGzC,IACpByB,OAAQiB,EAAWD,GAAG1C,GACtB4C,IAAKF,EACL5C,QAAS6C,EAAWD,GAAG5C,QACvBC,WAAY4C,EAAWD,GAAG3C,WAC1BgB,MAAO,EAAKL,MAAMK,MAClBU,cAAe,EAAKf,MAAMe,kBAMtBI,KAAKnB,MAAM6B,eAAeC,IAAI,SAACC,EAASC,EAAGC,GACnD,OACE,kBAAC,EAAD,CACER,KAAK,IACLT,OAAQiB,EAAWD,GAAG1C,GACtB4C,IAAKF,EACL5C,QAAS6C,EAAWD,GAAG5C,QACvBC,WAAY4C,EAAWD,GAAG3C,WAC1BgB,MAAO,EAAKL,MAAMK,MAClBU,cAAe,EAAKf,MAAMe,kBAOhC,yBAAKM,UAAU,YAAYO,O,GAzCXF,aCgJPS,E,YA/Ib,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRoC,aAAe,WACb,EAAK5B,SAAS,CACZH,OAAQ,EAAKC,MAAMD,MACnBgC,QAASC,OAAOC,aAAa,QAhBd,EAqBnBC,WAAa,WAEP,EAAKlC,MAAMD,QAEuB,eAAhC,EAAKC,MAAMmC,iBACb,EAAKjC,SAAS,CACZqB,eAAgBrC,EAChB6C,QAAS,mBACTI,iBAAkB,qBAGpB,EAAKjC,SAAS,CACZqB,eAAgB1C,EAChBkD,QAAS,aACTI,iBAAkB,iBAnCP,EA0CnBC,gBAAkB,SAACC,GACb,EAAKrC,MAAMD,OACb,EAAKG,SAAS,CACZ6B,QAASM,KA7CI,EAmDnBC,aAAe,SAAC1C,GACV,EAAKI,MAAMD,QACb,EAAKG,SAAS,CACZqC,aAAc3C,EAAM4C,OAAOC,MAC3BV,QAAS,WAAaW,KAAKC,MAA2B,IAArB/C,EAAM4C,OAAOC,SAEhDjC,WAAW,kBAAM,EAAKoC,gBAAgB,OAzDvB,EA8DnBA,aAAe,WACb,EAAK1C,SAAS,CACZ6B,QAASC,OAAOC,aAAa,QA7D/B,EAAKjC,MAAQ,CACXD,OAAO,EACPgC,QAASC,OAAOC,aAAa,KAC7BV,eAAgB1C,EAChBsD,iBAAkB,aAClBI,aAAc,IARC,E,sEAoET,IAAD,OAEDM,EAAchC,KAAKb,MAAMD,MAC3B,CACA+C,MAAO,SAEP,CACAA,MAAO,QAELC,EAAalC,KAAKb,MAAMuB,iBAAmB1C,EAC7C,CACAiE,MAAO,QAEP,CACAA,MAAO,SAUX,MANc,GAAGE,MAAMC,KAAK7C,SAAS8C,uBAAuB,SAEtDC,QAAQ,SAAAhD,GACZA,EAAMiD,OAAS,EAAKpD,MAAMuC,eAI1B,yBAAKxB,UAAU,kBAAkB/B,GAAG,gBAGlC,kBAAC,EAAD,CACEqE,WAAYxC,KAAKb,MAAMuC,aACvBhB,eAAgBV,KAAKb,MAAMuB,eAC3BxB,MAAOc,KAAKb,MAAMD,MAClBU,cAAeI,KAAKuB,kBAItB,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,cAAc,MAAQiB,OAAOC,aAAa,MACzD,uBAAGlB,UAAU,qCAGf,yBAAKA,UAAU,sBAEb,yBAAKA,UAAU,WACb,oCACA,yBAAKA,UAAU,SAASC,QAASH,KAAKiB,cACpC,yBAAKf,UAAU,QAAQE,MAAO4B,MAIlC,uBAAG7D,GAAG,WAAW6B,KAAKb,MAAM+B,SAE5B,yBAAKhB,UAAU,iBACb,2BACEuC,IAAI,IACJC,IAAI,IACJC,SAAU3C,KAAKyB,aACfmB,KAAK,OACLC,KAAK,QACLjB,MAAO5B,KAAKb,MAAMuC,gBAItB,yBAAKxB,UAAU,WACb,mCACA,yBAAKA,UAAU,SAASC,QAASH,KAAKqB,YACpC,yBAAKnB,UAAU,QAAQE,MAAO8B,Y,GAvI1B3B,aCClBuC,IAASC,OAAO,kBAAC,EAAD,MAASxD,SAASC,eAAe,U","file":"static/js/main.606d52de.chunk.js","sourcesContent":["\nconst BankOne = [\n    {\n        keyCode: 81,\n        keyTrigger: 'Q',\n        id: 'Heater-1',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n    },\n    {\n        keyCode: 87,\n        keyTrigger: 'W',\n        id: 'Heater-2',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n    },\n    {\n        keyCode: 69,\n        keyTrigger: 'E',\n        id: 'Heater-3',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n    },\n    {\n        keyCode: 65,\n        keyTrigger: 'A',\n        id: 'Heater-4',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n    },\n    {\n        keyCode: 83,\n        keyTrigger: 'S',\n        id: 'Clap',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n    },\n    {\n        keyCode: 68,\n        keyTrigger: 'D',\n        id: 'Open-HH',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n    },\n    {\n        keyCode: 90,\n        keyTrigger: 'Z',\n        // for german layout, use this\n        // keyCode: 89,\n        // keyTrigger: 'Y',\n        id: \"Kick-n'-Hat\",\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n    },\n    {\n        keyCode: 88,\n        keyTrigger: 'X',\n        id: 'Kick',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n    },\n    {\n        keyCode: 67,\n        keyTrigger: 'C',\n        id: 'Closed-HH',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n    }\n];\n\nconst BankTwo = [\n    {\n        keyCode: 81,\n        keyTrigger: 'Q',\n        id: 'Chord-1',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n    },\n    {\n        keyCode: 87,\n        keyTrigger: 'W',\n        id: 'Chord-2',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n    },\n    {\n        keyCode: 69,\n        keyTrigger: 'E',\n        id: 'Chord-3',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n    },\n    {\n        keyCode: 65,\n        keyTrigger: 'A',\n        id: 'Shaker',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n    },\n    {\n        keyCode: 83,\n        keyTrigger: 'S',\n        id: 'Open-HH',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n    },\n    {\n        keyCode: 68,\n        keyTrigger: 'D',\n        id: 'Closed-HH',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n    },\n    {\n        keyCode: 90,\n        keyTrigger: 'Z',\n        // for german layout, use this\n        // keyCode: 89,\n        // keyTrigger: 'Y',\n\n        id: 'Punchy-Kick',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n    },\n    {\n        keyCode: 88,\n        keyTrigger: 'X',\n        id: 'Side-Stick',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n    },\n    {\n        keyCode: 67,\n        keyTrigger: 'C',\n        id: 'Snare',\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n    }\n];\n\nexport { BankOne, BankTwo };","import React, { Component } from 'react';\n\n// Helper Styles\n// Active when clicked / key pressed\n// more top-margin and no y value for boxShadow => pressed down effect\nconst activeStyle = {\n    backgroundColor: 'lightskyblue',\n    boxShadow: '0 3px lightskyblue',\n    height: 77,\n    marginTop: 13\n};\n// else inactive\nconst inactiveStyle = {\n    backgroundColor: 'grey',\n    marginTop: 10,\n    boxShadow: '3px 3px 5px black'\n};\nclass DrumPad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            padStyle: inactiveStyle\n        }\n    }\n\n    // add event listeners on mount\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeypress);\n    }\n    // remove them when unmounting\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeypress);\n    }\n\n    // handle keypresses, play sound when corrosponding key is pressed\n    handleKeypress = (event) => {\n        if (event.keyCode === this.props.keyCode) {\n            this.playSound();\n        }\n    }\n\n    // activate pads when they're pressed (style them correctly)\n    // The if checks are because of the last setState. Setting the button to active (pressed down)\n    // while power is off means I don't want a background color, but that also means that I can't\n    // just check if the current style is exactly the same as the predefined ones\n    activatePad = () => {\n        // check if dum machine is on\n        if (this.props.power) {\n            // check if it's already active\n            if (this.state.padStyle.backgroundColor === 'lightskyblue') {\n                // then set to inactive\n                this.setState({\n                    padStyle: inactiveStyle\n                });\n            } else {\n                // set to active\n                this.setState({\n                    padStyle: activeStyle\n                });\n            }\n        } else if (this.state.padStyle.marginTop === 13) {\n            this.setState({\n                // if power is off and button is pressed, set it to inactive\n                padStyle: inactiveStyle\n            });\n        } else {\n            this.setState({\n                // power off and button not pressed, set it to active without the BG Color\n                padStyle: {\n                    height: 77,\n                    marginTop: 13,\n                    backgroundColor: 'grey',\n                    boxShadow: '0 3px grey'\n                }\n            });\n        }\n    }\n\n    // get sound, play it, activate pad and deactive after a few ms. Also show soud being played\n    playSound = () => {\n        const sound = document.getElementById(this.props.keyTrigger);\n        sound.currentTime = 0;\n        sound.play();\n        this.activatePad();\n        setTimeout(() => this.activatePad(), 100);\n        this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n    }\n\n    render() {\n        return (\n            <div\n                className='drum-pad'\n                id={this.props.clipId}\n                onClick={this.playSound}\n                style={this.state.padStyle}\n            >\n                {/* audio container */}\n                <audio\n                    className='clip'\n                    id={this.props.keyTrigger}\n                    src={this.props.clip}\n                />\n                {/* text of Dumpad => key/letter */}\n                {this.props.keyTrigger}\n            </div>\n        );\n    }\n\n}\n\nexport default DrumPad;","import React, { Component } from 'react';\n\nimport DrumPad from './DrumPad';\n\nclass PadBank extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    let padBank;\n    if (this.props.power) { // if drum machine is on\n      // return Drumpad Component with active clips, map the currentPadBank\n      // also hand over power state and updateDisplay function\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n        return (\n          <DrumPad\n            clip={padBankArr[i].url}\n            clipId={padBankArr[i].id}\n            key={i}\n            keyCode={padBankArr[i].keyCode}\n            keyTrigger={padBankArr[i].keyTrigger}\n            power={this.props.power}\n            updateDisplay={this.props.updateDisplay}\n          />\n        );\n      });\n    } else {\n      // same as above, but no active clips without power, so that no sound will play when clicking\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n        return (\n          <DrumPad\n            clip='#'\n            clipId={padBankArr[i].id}\n            key={i}\n            keyCode={padBankArr[i].keyCode}\n            keyTrigger={padBankArr[i].keyTrigger}\n            power={this.props.power}\n            updateDisplay={this.props.updateDisplay}\n          />\n        );\n      });\n    }\n\n    return (\n      <div className='pad-bank'>{padBank}</div>\n    )\n  }\n}\n\nexport default PadBank;","import React, { Component } from 'react';\n\nimport { BankOne, BankTwo, PadBank } from './Components';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      power: true,                      // Drum Machine active?\n      display: String.fromCharCode(160),// text that will be displayed, initial non-breaking whitespace\n      currentPadBank: BankOne,          // soundbank currently in use\n      currentPadBankId: 'Heater Kit',   // name of the soundbank\n      sliderVolume: 0.3                 // current volume\n    }\n  }\n\n  // function to toggle power\n  powerControl = () => {\n    this.setState({\n      power: !this.state.power,         // toggle power\n      display: String.fromCharCode(160) // reset display to non-breaking whitespace\n    });\n  }\n\n  // function to toggle between the 2 soundbanks\n  selectBank = () => {\n    // Check for power\n    if (this.state.power) {\n      // check what is current bank\n      if (this.state.currentPadBankId === 'Heater Kit') {\n        this.setState({\n          currentPadBank: BankTwo,\n          display: 'Smooth Piano Kit',\n          currentPadBankId: 'Smooth Piano Kit'\n        });\n      } else {\n        this.setState({\n          currentPadBank: BankOne,\n          display: 'Heater Kit',\n          currentPadBankId: 'Heater Kit'\n        });\n      }\n    }\n  }\n\n  // function to display the name of the sound played\n  displayClipName = (name) => {\n    if (this.state.power) {\n      this.setState({\n        display: name\n      });\n    }\n  }\n\n  // function to change the volume\n  adjustVolume = (event) => {\n    if (this.state.power) {\n      this.setState({\n        sliderVolume: event.target.value,                           // set the new volume\n        display: 'Volume: ' + Math.round(event.target.value * 100)  // and display it for the user\n      });\n      setTimeout(() => this.clearDisplay(), 1000);\n    }\n  }\n\n  // function to clear display\n  clearDisplay = () => {\n    this.setState({\n      display: String.fromCharCode(160)\n    });\n  }\n\n  render() {\n    // variables that hold power- and bank-switch style/positions\n    const powerSwitch = this.state.power\n      ? {\n        float: 'right'\n      }\n      : {\n        float: 'left'\n      }\n    const bankSwitch = this.state.currentPadBank === BankOne\n      ? {\n        float: 'left'\n      }\n      : {\n        float: 'right'\n      }\n\n    // get all elements with class 'clip'\n    const clips = [].slice.call(document.getElementsByClassName('clip'));\n    // Then set the sound-value for each\n    clips.forEach(sound => {\n      sound.volume = this.state.sliderVolume\n    });\n\n    return (\n      <div className='inner-container' id='drum-machine'>\n\n        {/* PadBank Component*/}\n        <PadBank\n          clipVolume={this.state.sliderVolume}\n          currentPadBank={this.state.currentPadBank}\n          power={this.state.power}\n          updateDisplay={this.displayClipName}\n        />\n\n        {/* Logo */}\n        <div className='logo'>\n          <div className='inner-logo'>{'FCC' + String.fromCharCode(160)}</div>\n          <i className='inner-logo fa fa-free-code-camp' />\n        </div>\n\n        <div className='controls-container'>\n          {/* Power Control */}\n          <div className='control'>\n            <p>Power</p>\n            <div className='select' onClick={this.powerControl}>\n              <div className='inner' style={powerSwitch} />\n            </div>\n          </div>\n          {/* Display for Volume, Sound-Names, etc */}\n          <p id='display'>{this.state.display}</p>\n          {/* Volume Slider */}\n          <div className='volume-slider'>\n            <input\n              max='1'\n              min='0'\n              onChange={this.adjustVolume}\n              step='0.01'\n              type='range'\n              value={this.state.sliderVolume}\n            />\n          </div>\n          {/* Bank Control */}\n          <div className='control'>\n            <p>Bank</p>\n            <div className='select' onClick={this.selectBank}>\n              <div className='inner' style={bankSwitch} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}